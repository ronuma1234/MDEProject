/*
 * generated by Xtext 2.34.0
 */
grammar InternalTrader;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package uk.ac.kcl.inf.trader.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package uk.ac.kcl.inf.trader.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import uk.ac.kcl.inf.trader.services.TraderGrammarAccess;

}
@parser::members {
	private TraderGrammarAccess grammarAccess;

	public void setGrammarAccess(TraderGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleTraderProgram
entryRuleTraderProgram
:
{ before(grammarAccess.getTraderProgramRule()); }
	 ruleTraderProgram
{ after(grammarAccess.getTraderProgramRule()); } 
	 EOF 
;

// Rule TraderProgram
ruleTraderProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTraderProgramAccess().getStatementsAssignment()); }
		(rule__TraderProgram__StatementsAssignment)*
		{ after(grammarAccess.getTraderProgramAccess().getStatementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnectStatement
entryRuleConnectStatement
:
{ before(grammarAccess.getConnectStatementRule()); }
	 ruleConnectStatement
{ after(grammarAccess.getConnectStatementRule()); } 
	 EOF 
;

// Rule ConnectStatement
ruleConnectStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectStatementAccess().getGroup()); }
		(rule__ConnectStatement__Group__0)
		{ after(grammarAccess.getConnectStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateBotStatement
entryRuleCreateBotStatement
:
{ before(grammarAccess.getCreateBotStatementRule()); }
	 ruleCreateBotStatement
{ after(grammarAccess.getCreateBotStatementRule()); } 
	 EOF 
;

// Rule CreateBotStatement
ruleCreateBotStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateBotStatementAccess().getGroup()); }
		(rule__CreateBotStatement__Group__0)
		{ after(grammarAccess.getCreateBotStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListBotsStatement
entryRuleListBotsStatement
:
{ before(grammarAccess.getListBotsStatementRule()); }
	 ruleListBotsStatement
{ after(grammarAccess.getListBotsStatementRule()); } 
	 EOF 
;

// Rule ListBotsStatement
ruleListBotsStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListBotsStatementAccess().getGroup()); }
		(rule__ListBotsStatement__Group__0)
		{ after(grammarAccess.getListBotsStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExecuteBotsStatement
entryRuleExecuteBotsStatement
:
{ before(grammarAccess.getExecuteBotsStatementRule()); }
	 ruleExecuteBotsStatement
{ after(grammarAccess.getExecuteBotsStatementRule()); } 
	 EOF 
;

// Rule ExecuteBotsStatement
ruleExecuteBotsStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExecuteBotsStatementAccess().getGroup()); }
		(rule__ExecuteBotsStatement__Group__0)
		{ after(grammarAccess.getExecuteBotsStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getGroup()); }
		(rule__VariableDeclaration__Group__0)
		{ after(grammarAccess.getVariableDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringValue
entryRuleStringValue
:
{ before(grammarAccess.getStringValueRule()); }
	 ruleStringValue
{ after(grammarAccess.getStringValueRule()); } 
	 EOF 
;

// Rule StringValue
ruleStringValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringValueAccess().getValueAssignment()); }
		(rule__StringValue__ValueAssignment)
		{ after(grammarAccess.getStringValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRealValue
entryRuleRealValue
:
{ before(grammarAccess.getRealValueRule()); }
	 ruleRealValue
{ after(grammarAccess.getRealValueRule()); } 
	 EOF 
;

// Rule RealValue
ruleRealValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRealValueAccess().getValueAssignment()); }
		(rule__RealValue__ValueAssignment)
		{ after(grammarAccess.getRealValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntValue
entryRuleIntValue
:
{ before(grammarAccess.getIntValueRule()); }
	 ruleIntValue
{ after(grammarAccess.getIntValueRule()); } 
	 EOF 
;

// Rule IntValue
ruleIntValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntValueAccess().getValueAssignment()); }
		(rule__IntValue__ValueAssignment)
		{ after(grammarAccess.getIntValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLoopStatement
entryRuleLoopStatement
:
{ before(grammarAccess.getLoopStatementRule()); }
	 ruleLoopStatement
{ after(grammarAccess.getLoopStatementRule()); } 
	 EOF 
;

// Rule LoopStatement
ruleLoopStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLoopStatementAccess().getGroup()); }
		(rule__LoopStatement__Group__0)
		{ after(grammarAccess.getLoopStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddition
entryRuleAddition
:
{ before(grammarAccess.getAdditionRule()); }
	 ruleAddition
{ after(grammarAccess.getAdditionRule()); } 
	 EOF 
;

// Rule Addition
ruleAddition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditionAccess().getGroup()); }
		(rule__Addition__Group__0)
		{ after(grammarAccess.getAdditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplication
entryRuleMultiplication
:
{ before(grammarAccess.getMultiplicationRule()); }
	 ruleMultiplication
{ after(grammarAccess.getMultiplicationRule()); } 
	 EOF 
;

// Rule Multiplication
ruleMultiplication 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicationAccess().getGroup()); }
		(rule__Multiplication__Group__0)
		{ after(grammarAccess.getMultiplicationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumVarExpression
entryRuleNumVarExpression
:
{ before(grammarAccess.getNumVarExpressionRule()); }
	 ruleNumVarExpression
{ after(grammarAccess.getNumVarExpressionRule()); } 
	 EOF 
;

// Rule NumVarExpression
ruleNumVarExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumVarExpressionAccess().getVarAssignment()); }
		(rule__NumVarExpression__VarAssignment)
		{ after(grammarAccess.getNumVarExpressionAccess().getVarAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleREAL
entryRuleREAL
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getREALRule()); }
	 ruleREAL
{ after(grammarAccess.getREALRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule REAL
ruleREAL 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getREALAccess().getGroup()); }
		(rule__REAL__Group__0)
		{ after(grammarAccess.getREALAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleStringPrimary
entryRuleStringPrimary
:
{ before(grammarAccess.getStringPrimaryRule()); }
	 ruleStringPrimary
{ after(grammarAccess.getStringPrimaryRule()); } 
	 EOF 
;

// Rule StringPrimary
ruleStringPrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringPrimaryAccess().getAlternatives()); }
		(rule__StringPrimary__Alternatives)
		{ after(grammarAccess.getStringPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringVarExpression
entryRuleStringVarExpression
:
{ before(grammarAccess.getStringVarExpressionRule()); }
	 ruleStringVarExpression
{ after(grammarAccess.getStringVarExpressionRule()); } 
	 EOF 
;

// Rule StringVarExpression
ruleStringVarExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringVarExpressionAccess().getVarAssignment()); }
		(rule__StringVarExpression__VarAssignment)
		{ after(grammarAccess.getStringVarExpressionAccess().getVarAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule StrategyDef
ruleStrategyDef
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStrategyDefAccess().getAlternatives()); }
		(rule__StrategyDef__Alternatives)
		{ after(grammarAccess.getStrategyDefAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule TimeFrameDef
ruleTimeFrameDef
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeFrameDefAccess().getAlternatives()); }
		(rule__TimeFrameDef__Alternatives)
		{ after(grammarAccess.getTimeFrameDefAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getConnectStatementParserRuleCall_0()); }
		ruleConnectStatement
		{ after(grammarAccess.getStatementAccess().getConnectStatementParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getCreateBotStatementParserRuleCall_1()); }
		ruleCreateBotStatement
		{ after(grammarAccess.getStatementAccess().getCreateBotStatementParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getListBotsStatementParserRuleCall_2()); }
		ruleListBotsStatement
		{ after(grammarAccess.getStatementAccess().getListBotsStatementParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getExecuteBotsStatementParserRuleCall_3()); }
		ruleExecuteBotsStatement
		{ after(grammarAccess.getStatementAccess().getExecuteBotsStatementParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getVariableDeclarationParserRuleCall_4()); }
		ruleVariableDeclaration
		{ after(grammarAccess.getStatementAccess().getVariableDeclarationParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getLoopStatementParserRuleCall_5()); }
		ruleLoopStatement
		{ after(grammarAccess.getStatementAccess().getLoopStatementParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getValueAssignment_3_0()); }
		(rule__VariableDeclaration__ValueAssignment_3_0)
		{ after(grammarAccess.getVariableDeclarationAccess().getValueAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getValueAssignment_3_1()); }
		(rule__VariableDeclaration__ValueAssignment_3_1)
		{ after(grammarAccess.getVariableDeclarationAccess().getValueAssignment_3_1()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getValueAssignment_3_2()); }
		(rule__VariableDeclaration__ValueAssignment_3_2)
		{ after(grammarAccess.getVariableDeclarationAccess().getValueAssignment_3_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__OperatorAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionAccess().getOperatorPlusSignKeyword_1_1_0_0()); }
		'+'
		{ after(grammarAccess.getAdditionAccess().getOperatorPlusSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditionAccess().getOperatorHyphenMinusKeyword_1_1_0_1()); }
		'-'
		{ after(grammarAccess.getAdditionAccess().getOperatorHyphenMinusKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__OperatorAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationAccess().getOperatorAsteriskKeyword_1_1_0_0()); }
		'*'
		{ after(grammarAccess.getMultiplicationAccess().getOperatorAsteriskKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicationAccess().getOperatorSolidusKeyword_1_1_0_1()); }
		'/'
		{ after(grammarAccess.getMultiplicationAccess().getOperatorSolidusKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getIntValueParserRuleCall_0()); }
		ruleIntValue
		{ after(grammarAccess.getPrimaryAccess().getIntValueParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getRealValueParserRuleCall_1()); }
		ruleRealValue
		{ after(grammarAccess.getPrimaryAccess().getRealValueParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getNumVarExpressionParserRuleCall_2()); }
		ruleNumVarExpression
		{ after(grammarAccess.getPrimaryAccess().getNumVarExpressionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_3()); }
		(rule__Primary__Group_3__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringPrimary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringPrimaryAccess().getStringVarExpressionParserRuleCall_0()); }
		ruleStringVarExpression
		{ after(grammarAccess.getStringPrimaryAccess().getStringVarExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStringPrimaryAccess().getStringValueParserRuleCall_1()); }
		ruleStringValue
		{ after(grammarAccess.getStringPrimaryAccess().getStringValueParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StrategyDef__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStrategyDefAccess().getBuyAndHoldEnumLiteralDeclaration_0()); }
		('buyAndHold')
		{ after(grammarAccess.getStrategyDefAccess().getBuyAndHoldEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getStrategyDefAccess().getMeanReversionEnumLiteralDeclaration_1()); }
		('meanReversion')
		{ after(grammarAccess.getStrategyDefAccess().getMeanReversionEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeFrameDef__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeFrameDefAccess().getM1EnumLiteralDeclaration_0()); }
		('M1')
		{ after(grammarAccess.getTimeFrameDefAccess().getM1EnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimeFrameDefAccess().getM2EnumLiteralDeclaration_1()); }
		('M2')
		{ after(grammarAccess.getTimeFrameDefAccess().getM2EnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTimeFrameDefAccess().getM3EnumLiteralDeclaration_2()); }
		('M3')
		{ after(grammarAccess.getTimeFrameDefAccess().getM3EnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getTimeFrameDefAccess().getM4EnumLiteralDeclaration_3()); }
		('M4')
		{ after(grammarAccess.getTimeFrameDefAccess().getM4EnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getTimeFrameDefAccess().getM5EnumLiteralDeclaration_4()); }
		('M5')
		{ after(grammarAccess.getTimeFrameDefAccess().getM5EnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getTimeFrameDefAccess().getM6EnumLiteralDeclaration_5()); }
		('M6')
		{ after(grammarAccess.getTimeFrameDefAccess().getM6EnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getTimeFrameDefAccess().getM10EnumLiteralDeclaration_6()); }
		('M10')
		{ after(grammarAccess.getTimeFrameDefAccess().getM10EnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getTimeFrameDefAccess().getM12EnumLiteralDeclaration_7()); }
		('M12')
		{ after(grammarAccess.getTimeFrameDefAccess().getM12EnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getTimeFrameDefAccess().getM20EnumLiteralDeclaration_8()); }
		('M20')
		{ after(grammarAccess.getTimeFrameDefAccess().getM20EnumLiteralDeclaration_8()); }
	)
	|
	(
		{ before(grammarAccess.getTimeFrameDefAccess().getM30EnumLiteralDeclaration_9()); }
		('M30')
		{ after(grammarAccess.getTimeFrameDefAccess().getM30EnumLiteralDeclaration_9()); }
	)
	|
	(
		{ before(grammarAccess.getTimeFrameDefAccess().getH1EnumLiteralDeclaration_10()); }
		('H1')
		{ after(grammarAccess.getTimeFrameDefAccess().getH1EnumLiteralDeclaration_10()); }
	)
	|
	(
		{ before(grammarAccess.getTimeFrameDefAccess().getH2EnumLiteralDeclaration_11()); }
		('H2')
		{ after(grammarAccess.getTimeFrameDefAccess().getH2EnumLiteralDeclaration_11()); }
	)
	|
	(
		{ before(grammarAccess.getTimeFrameDefAccess().getH3EnumLiteralDeclaration_12()); }
		('H3')
		{ after(grammarAccess.getTimeFrameDefAccess().getH3EnumLiteralDeclaration_12()); }
	)
	|
	(
		{ before(grammarAccess.getTimeFrameDefAccess().getH4EnumLiteralDeclaration_13()); }
		('H4')
		{ after(grammarAccess.getTimeFrameDefAccess().getH4EnumLiteralDeclaration_13()); }
	)
	|
	(
		{ before(grammarAccess.getTimeFrameDefAccess().getH6EnumLiteralDeclaration_14()); }
		('H6')
		{ after(grammarAccess.getTimeFrameDefAccess().getH6EnumLiteralDeclaration_14()); }
	)
	|
	(
		{ before(grammarAccess.getTimeFrameDefAccess().getH8EnumLiteralDeclaration_15()); }
		('H8')
		{ after(grammarAccess.getTimeFrameDefAccess().getH8EnumLiteralDeclaration_15()); }
	)
	|
	(
		{ before(grammarAccess.getTimeFrameDefAccess().getH12EnumLiteralDeclaration_16()); }
		('H12')
		{ after(grammarAccess.getTimeFrameDefAccess().getH12EnumLiteralDeclaration_16()); }
	)
	|
	(
		{ before(grammarAccess.getTimeFrameDefAccess().getD1EnumLiteralDeclaration_17()); }
		('D1')
		{ after(grammarAccess.getTimeFrameDefAccess().getD1EnumLiteralDeclaration_17()); }
	)
	|
	(
		{ before(grammarAccess.getTimeFrameDefAccess().getW1EnumLiteralDeclaration_18()); }
		('W1')
		{ after(grammarAccess.getTimeFrameDefAccess().getW1EnumLiteralDeclaration_18()); }
	)
	|
	(
		{ before(grammarAccess.getTimeFrameDefAccess().getMN1EnumLiteralDeclaration_19()); }
		('MN1')
		{ after(grammarAccess.getTimeFrameDefAccess().getMN1EnumLiteralDeclaration_19()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectStatement__Group__0__Impl
	rule__ConnectStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectStatementAccess().getConnectKeyword_0()); }
	'connect'
	{ after(grammarAccess.getConnectStatementAccess().getConnectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectStatement__Group__1__Impl
	rule__ConnectStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectStatementAccess().getToKeyword_1()); }
	'to'
	{ after(grammarAccess.getConnectStatementAccess().getToKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectStatement__Group__2__Impl
	rule__ConnectStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectStatementAccess().getTradeKeyword_2()); }
	'trade'
	{ after(grammarAccess.getConnectStatementAccess().getTradeKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectStatement__Group__3__Impl
	rule__ConnectStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectStatementAccess().getTickerNameAssignment_3()); }
	(rule__ConnectStatement__TickerNameAssignment_3)
	{ after(grammarAccess.getConnectStatementAccess().getTickerNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectStatement__Group__4__Impl
	rule__ConnectStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectStatementAccess().getOnKeyword_4()); }
	'on'
	{ after(grammarAccess.getConnectStatementAccess().getOnKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectStatement__Group__5__Impl
	rule__ConnectStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectStatementAccess().getServerKeyword_5()); }
	'server'
	{ after(grammarAccess.getConnectStatementAccess().getServerKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectStatement__Group__6__Impl
	rule__ConnectStatement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectStatementAccess().getBrokerNameAssignment_6()); }
	(rule__ConnectStatement__BrokerNameAssignment_6)
	{ after(grammarAccess.getConnectStatementAccess().getBrokerNameAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectStatement__Group__7__Impl
	rule__ConnectStatement__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectStatementAccess().getWithKeyword_7()); }
	'with'
	{ after(grammarAccess.getConnectStatementAccess().getWithKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectStatement__Group__8__Impl
	rule__ConnectStatement__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectStatementAccess().getLoginKeyword_8()); }
	'login'
	{ after(grammarAccess.getConnectStatementAccess().getLoginKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectStatement__Group__9__Impl
	rule__ConnectStatement__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectStatementAccess().getUsernameAssignment_9()); }
	(rule__ConnectStatement__UsernameAssignment_9)
	{ after(grammarAccess.getConnectStatementAccess().getUsernameAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectStatement__Group__10__Impl
	rule__ConnectStatement__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectStatementAccess().getCommaKeyword_10()); }
	','
	{ after(grammarAccess.getConnectStatementAccess().getCommaKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectStatement__Group__11__Impl
	rule__ConnectStatement__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectStatementAccess().getPasswordKeyword_11()); }
	'password'
	{ after(grammarAccess.getConnectStatementAccess().getPasswordKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectStatement__Group__12__Impl
	rule__ConnectStatement__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectStatementAccess().getPasswordAssignment_12()); }
	(rule__ConnectStatement__PasswordAssignment_12)
	{ after(grammarAccess.getConnectStatementAccess().getPasswordAssignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectStatement__Group__13__Impl
	rule__ConnectStatement__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectStatementAccess().getCommaKeyword_13()); }
	','
	{ after(grammarAccess.getConnectStatementAccess().getCommaKeyword_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectStatement__Group__14__Impl
	rule__ConnectStatement__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectStatementAccess().getTimeframeKeyword_14()); }
	'timeframe'
	{ after(grammarAccess.getConnectStatementAccess().getTimeframeKeyword_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectStatement__Group__15__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectStatementAccess().getTimeframeAssignment_15()); }
	(rule__ConnectStatement__TimeframeAssignment_15)
	{ after(grammarAccess.getConnectStatementAccess().getTimeframeAssignment_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateBotStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateBotStatement__Group__0__Impl
	rule__CreateBotStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateBotStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateBotStatementAccess().getCreateKeyword_0()); }
	'create'
	{ after(grammarAccess.getCreateBotStatementAccess().getCreateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateBotStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateBotStatement__Group__1__Impl
	rule__CreateBotStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateBotStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateBotStatementAccess().getBotKeyword_1()); }
	'bot'
	{ after(grammarAccess.getCreateBotStatementAccess().getBotKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateBotStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateBotStatement__Group__2__Impl
	rule__CreateBotStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateBotStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateBotStatementAccess().getWithKeyword_2()); }
	'with'
	{ after(grammarAccess.getCreateBotStatementAccess().getWithKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateBotStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateBotStatement__Group__3__Impl
	rule__CreateBotStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateBotStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateBotStatementAccess().getStrategyKeyword_3()); }
	'strategy'
	{ after(grammarAccess.getCreateBotStatementAccess().getStrategyKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateBotStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateBotStatement__Group__4__Impl
	rule__CreateBotStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateBotStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateBotStatementAccess().getStrategyAssignment_4()); }
	(rule__CreateBotStatement__StrategyAssignment_4)
	{ after(grammarAccess.getCreateBotStatementAccess().getStrategyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateBotStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateBotStatement__Group__5__Impl
	rule__CreateBotStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateBotStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateBotStatementAccess().getUsingKeyword_5()); }
	'using'
	{ after(grammarAccess.getCreateBotStatementAccess().getUsingKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateBotStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateBotStatement__Group__6__Impl
	rule__CreateBotStatement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateBotStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateBotStatementAccess().getLotKeyword_6()); }
	'lot'
	{ after(grammarAccess.getCreateBotStatementAccess().getLotKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateBotStatement__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateBotStatement__Group__7__Impl
	rule__CreateBotStatement__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateBotStatement__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateBotStatementAccess().getSizeKeyword_7()); }
	'size'
	{ after(grammarAccess.getCreateBotStatementAccess().getSizeKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateBotStatement__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateBotStatement__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateBotStatement__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateBotStatementAccess().getLotSizeAssignment_8()); }
	(rule__CreateBotStatement__LotSizeAssignment_8)
	{ after(grammarAccess.getCreateBotStatementAccess().getLotSizeAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListBotsStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListBotsStatement__Group__0__Impl
	rule__ListBotsStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListBotsStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListBotsStatementAccess().getListCommandAssignment_0()); }
	(rule__ListBotsStatement__ListCommandAssignment_0)
	{ after(grammarAccess.getListBotsStatementAccess().getListCommandAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListBotsStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListBotsStatement__Group__1__Impl
	rule__ListBotsStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListBotsStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListBotsStatementAccess().getRegisteredKeyword_1()); }
	'registered'
	{ after(grammarAccess.getListBotsStatementAccess().getRegisteredKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListBotsStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListBotsStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListBotsStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListBotsStatementAccess().getBotsKeyword_2()); }
	'bots'
	{ after(grammarAccess.getListBotsStatementAccess().getBotsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExecuteBotsStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecuteBotsStatement__Group__0__Impl
	rule__ExecuteBotsStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteBotsStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecuteBotsStatementAccess().getExecuteKeyword_0()); }
	'execute'
	{ after(grammarAccess.getExecuteBotsStatementAccess().getExecuteKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteBotsStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecuteBotsStatement__Group__1__Impl
	rule__ExecuteBotsStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteBotsStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecuteBotsStatementAccess().getBotsKeyword_1()); }
	'bots'
	{ after(grammarAccess.getExecuteBotsStatementAccess().getBotsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteBotsStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecuteBotsStatement__Group__2__Impl
	rule__ExecuteBotsStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteBotsStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecuteBotsStatementAccess().getForKeyword_2()); }
	'for'
	{ after(grammarAccess.getExecuteBotsStatementAccess().getForKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteBotsStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecuteBotsStatement__Group__3__Impl
	rule__ExecuteBotsStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteBotsStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecuteBotsStatementAccess().getDaysAssignment_3()); }
	(rule__ExecuteBotsStatement__DaysAssignment_3)
	{ after(grammarAccess.getExecuteBotsStatementAccess().getDaysAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteBotsStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecuteBotsStatement__Group__4__Impl
	rule__ExecuteBotsStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteBotsStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecuteBotsStatementAccess().getDaysKeyword_4()); }
	'days'
	{ after(grammarAccess.getExecuteBotsStatementAccess().getDaysKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteBotsStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecuteBotsStatement__Group__5__Impl
	rule__ExecuteBotsStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteBotsStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecuteBotsStatementAccess().getHoursAssignment_5()); }
	(rule__ExecuteBotsStatement__HoursAssignment_5)
	{ after(grammarAccess.getExecuteBotsStatementAccess().getHoursAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteBotsStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecuteBotsStatement__Group__6__Impl
	rule__ExecuteBotsStatement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteBotsStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecuteBotsStatementAccess().getHoursKeyword_6()); }
	'hours'
	{ after(grammarAccess.getExecuteBotsStatementAccess().getHoursKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteBotsStatement__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecuteBotsStatement__Group__7__Impl
	rule__ExecuteBotsStatement__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteBotsStatement__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecuteBotsStatementAccess().getMinutesAssignment_7()); }
	(rule__ExecuteBotsStatement__MinutesAssignment_7)
	{ after(grammarAccess.getExecuteBotsStatementAccess().getMinutesAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteBotsStatement__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecuteBotsStatement__Group__8__Impl
	rule__ExecuteBotsStatement__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteBotsStatement__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecuteBotsStatementAccess().getMinutesKeyword_8()); }
	'minutes'
	{ after(grammarAccess.getExecuteBotsStatementAccess().getMinutesKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteBotsStatement__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecuteBotsStatement__Group__9__Impl
	rule__ExecuteBotsStatement__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteBotsStatement__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecuteBotsStatementAccess().getSecondsAssignment_9()); }
	(rule__ExecuteBotsStatement__SecondsAssignment_9)
	{ after(grammarAccess.getExecuteBotsStatementAccess().getSecondsAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteBotsStatement__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecuteBotsStatement__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteBotsStatement__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecuteBotsStatementAccess().getSecondsKeyword_10()); }
	'seconds'
	{ after(grammarAccess.getExecuteBotsStatementAccess().getSecondsKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__0__Impl
	rule__VariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getVarKeyword_0()); }
	'var'
	{ after(grammarAccess.getVariableDeclarationAccess().getVarKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__1__Impl
	rule__VariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getNameAssignment_1()); }
	(rule__VariableDeclaration__NameAssignment_1)
	{ after(grammarAccess.getVariableDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__2__Impl
	rule__VariableDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getAlternatives_3()); }
	(rule__VariableDeclaration__Alternatives_3)
	{ after(grammarAccess.getVariableDeclarationAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LoopStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoopStatement__Group__0__Impl
	rule__LoopStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopStatementAccess().getLoopKeyword_0()); }
	'loop'
	{ after(grammarAccess.getLoopStatementAccess().getLoopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoopStatement__Group__1__Impl
	rule__LoopStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopStatementAccess().getCountAssignment_1()); }
	(rule__LoopStatement__CountAssignment_1)
	{ after(grammarAccess.getLoopStatementAccess().getCountAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoopStatement__Group__2__Impl
	rule__LoopStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopStatementAccess().getTimesKeyword_2()); }
	'times'
	{ after(grammarAccess.getLoopStatementAccess().getTimesKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoopStatement__Group__3__Impl
	rule__LoopStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopStatementAccess().getDoKeyword_3()); }
	'do'
	{ after(grammarAccess.getLoopStatementAccess().getDoKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoopStatement__Group__4__Impl
	rule__LoopStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getLoopStatementAccess().getStatementsAssignment_4()); }
		(rule__LoopStatement__StatementsAssignment_4)
		{ after(grammarAccess.getLoopStatementAccess().getStatementsAssignment_4()); }
	)
	(
		{ before(grammarAccess.getLoopStatementAccess().getStatementsAssignment_4()); }
		(rule__LoopStatement__StatementsAssignment_4)*
		{ after(grammarAccess.getLoopStatementAccess().getStatementsAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoopStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopStatementAccess().getEndKeyword_5()); }
	'end'
	{ after(grammarAccess.getLoopStatementAccess().getEndKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group__0__Impl
	rule__Addition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); }
	ruleMultiplication
	{ after(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getGroup_1()); }
	(rule__Addition__Group_1__0)*
	{ after(grammarAccess.getAdditionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_1__0__Impl
	rule__Addition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getAdditionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAdditionAccess().getAdditionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_1__1__Impl
	rule__Addition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getOperatorAssignment_1_1()); }
	(rule__Addition__OperatorAssignment_1_1)
	{ after(grammarAccess.getAdditionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getRightAssignment_1_2()); }
	(rule__Addition__RightAssignment_1_2)
	{ after(grammarAccess.getAdditionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group__0__Impl
	rule__Multiplication__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getMultiplicationAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getGroup_1()); }
	(rule__Multiplication__Group_1__0)*
	{ after(grammarAccess.getMultiplicationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1__0__Impl
	rule__Multiplication__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getMultiplicationLeftAction_1_0()); }
	()
	{ after(grammarAccess.getMultiplicationAccess().getMultiplicationLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1__1__Impl
	rule__Multiplication__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getOperatorAssignment_1_1()); }
	(rule__Multiplication__OperatorAssignment_1_1)
	{ after(grammarAccess.getMultiplicationAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getRightAssignment_1_2()); }
	(rule__Multiplication__RightAssignment_1_2)
	{ after(grammarAccess.getMultiplicationAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__0__Impl
	rule__Primary__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__1__Impl
	rule__Primary__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getAdditionParserRuleCall_3_1()); }
	ruleAddition
	{ after(grammarAccess.getPrimaryAccess().getAdditionParserRuleCall_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_3_2()); }
	')'
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__REAL__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__REAL__Group__0__Impl
	rule__REAL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getREALAccess().getINTTerminalRuleCall_0()); }
	(RULE_INT)?
	{ after(grammarAccess.getREALAccess().getINTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__REAL__Group__1__Impl
	rule__REAL__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getREALAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getREALAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__REAL__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getREALAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
	{ after(grammarAccess.getREALAccess().getINTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TraderProgram__StatementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTraderProgramAccess().getStatementsStatementParserRuleCall_0()); }
		ruleStatement
		{ after(grammarAccess.getTraderProgramAccess().getStatementsStatementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__TickerNameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectStatementAccess().getTickerNameStringPrimaryParserRuleCall_3_0()); }
		ruleStringPrimary
		{ after(grammarAccess.getConnectStatementAccess().getTickerNameStringPrimaryParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__BrokerNameAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectStatementAccess().getBrokerNameStringPrimaryParserRuleCall_6_0()); }
		ruleStringPrimary
		{ after(grammarAccess.getConnectStatementAccess().getBrokerNameStringPrimaryParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__UsernameAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectStatementAccess().getUsernameStringPrimaryParserRuleCall_9_0()); }
		ruleStringPrimary
		{ after(grammarAccess.getConnectStatementAccess().getUsernameStringPrimaryParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__PasswordAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectStatementAccess().getPasswordStringPrimaryParserRuleCall_12_0()); }
		ruleStringPrimary
		{ after(grammarAccess.getConnectStatementAccess().getPasswordStringPrimaryParserRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectStatement__TimeframeAssignment_15
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectStatementAccess().getTimeframeTimeFrameDefEnumRuleCall_15_0()); }
		ruleTimeFrameDef
		{ after(grammarAccess.getConnectStatementAccess().getTimeframeTimeFrameDefEnumRuleCall_15_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateBotStatement__StrategyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateBotStatementAccess().getStrategyStrategyDefEnumRuleCall_4_0()); }
		ruleStrategyDef
		{ after(grammarAccess.getCreateBotStatementAccess().getStrategyStrategyDefEnumRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateBotStatement__LotSizeAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateBotStatementAccess().getLotSizeAdditionParserRuleCall_8_0()); }
		ruleAddition
		{ after(grammarAccess.getCreateBotStatementAccess().getLotSizeAdditionParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListBotsStatement__ListCommandAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListBotsStatementAccess().getListCommandSeeKeyword_0_0()); }
		(
			{ before(grammarAccess.getListBotsStatementAccess().getListCommandSeeKeyword_0_0()); }
			'see'
			{ after(grammarAccess.getListBotsStatementAccess().getListCommandSeeKeyword_0_0()); }
		)
		{ after(grammarAccess.getListBotsStatementAccess().getListCommandSeeKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteBotsStatement__DaysAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecuteBotsStatementAccess().getDaysAdditionParserRuleCall_3_0()); }
		ruleAddition
		{ after(grammarAccess.getExecuteBotsStatementAccess().getDaysAdditionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteBotsStatement__HoursAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecuteBotsStatementAccess().getHoursAdditionParserRuleCall_5_0()); }
		ruleAddition
		{ after(grammarAccess.getExecuteBotsStatementAccess().getHoursAdditionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteBotsStatement__MinutesAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecuteBotsStatementAccess().getMinutesAdditionParserRuleCall_7_0()); }
		ruleAddition
		{ after(grammarAccess.getExecuteBotsStatementAccess().getMinutesAdditionParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteBotsStatement__SecondsAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecuteBotsStatementAccess().getSecondsAdditionParserRuleCall_9_0()); }
		ruleAddition
		{ after(grammarAccess.getExecuteBotsStatementAccess().getSecondsAdditionParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__ValueAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getValueStringValueParserRuleCall_3_0_0()); }
		ruleStringValue
		{ after(grammarAccess.getVariableDeclarationAccess().getValueStringValueParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getValueIntValueParserRuleCall_3_1_0()); }
		ruleIntValue
		{ after(grammarAccess.getVariableDeclarationAccess().getValueIntValueParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__ValueAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getValueRealValueParserRuleCall_3_2_0()); }
		ruleRealValue
		{ after(grammarAccess.getVariableDeclarationAccess().getValueRealValueParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRealValueAccess().getValueREALParserRuleCall_0()); }
		ruleREAL
		{ after(grammarAccess.getRealValueAccess().getValueREALParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStatement__CountAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoopStatementAccess().getCountAdditionParserRuleCall_1_0()); }
		ruleAddition
		{ after(grammarAccess.getLoopStatementAccess().getCountAdditionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStatement__StatementsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoopStatementAccess().getStatementsStatementParserRuleCall_4_0()); }
		ruleStatement
		{ after(grammarAccess.getLoopStatementAccess().getStatementsStatementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionAccess().getOperatorAlternatives_1_1_0()); }
		(rule__Addition__OperatorAlternatives_1_1_0)
		{ after(grammarAccess.getAdditionAccess().getOperatorAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_2_0()); }
		ruleMultiplication
		{ after(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationAccess().getOperatorAlternatives_1_1_0()); }
		(rule__Multiplication__OperatorAlternatives_1_1_0)
		{ after(grammarAccess.getMultiplicationAccess().getOperatorAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationAccess().getRightPrimaryParserRuleCall_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getMultiplicationAccess().getRightPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumVarExpression__VarAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumVarExpressionAccess().getVarVariableDeclarationCrossReference_0()); }
		(
			{ before(grammarAccess.getNumVarExpressionAccess().getVarVariableDeclarationIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getNumVarExpressionAccess().getVarVariableDeclarationIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getNumVarExpressionAccess().getVarVariableDeclarationCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringVarExpression__VarAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringVarExpressionAccess().getVarVariableDeclarationCrossReference_0()); }
		(
			{ before(grammarAccess.getStringVarExpressionAccess().getVarVariableDeclarationIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStringVarExpressionAccess().getVarVariableDeclarationIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getStringVarExpressionAccess().getVarVariableDeclarationCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
