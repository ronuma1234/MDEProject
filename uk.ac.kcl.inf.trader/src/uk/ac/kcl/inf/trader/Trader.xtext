grammar uk.ac.kcl.inf.trader.Trader with org.eclipse.xtext.common.Terminals

generate trader "http://www.ac.uk/kcl/inf/trader/Trader"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

TraderProgram:
    statements+=Statement*
;

Statement:
    Connect | TradingBot | Execute | VariableDeclaration | LoopStatement
;

Connect:
    "connect" "broker" brokerName=ID ("," parameters=ConnectParameters)?
; 

ConnectParameters:
    "username" "=" username=STRING ","
    "password" "=" password=STRING ","
    "leverage" "=" leverage=REAL ","
    "money" "=" money=REAL ","
    "timeframe" "=" timeframe=STRING
;

TradingBot:
    "tradingBot" "strategy" "=" strategy = StrategyDef ","
    "funds" "=" funds = REAL
;

enum StrategyDef:
    buyAndHold | meanReversion
;

Execute:
    "execute" "bots" bots+=[TradingBot] ("," bots+=[TradingBot])*
;

VariableDeclaration:
	"var" name=ID "=" value = INT
;

LoopStatement:
	count = Addition "times" "do"
		statements += Statement+
	"end"		
;

REAL returns ecore::EFloat hidden():
	INT? "." INT
; 

Addition returns IntExpression:
	Multiplication ({Addition.left = current} operator+=("+"|"-") right+=Multiplication)*
;

Multiplication returns IntExpression:
	Primary ({Multiplication.left = current} operator+=("*"|"/") right+=Primary)*
;

Primary returns IntExpression:
	IntLiteral |
	IntVarExpression |
	"(" Addition ")"
;

IntLiteral:
	val = INT
;

IntVarExpression:
	var = [VariableDeclaration]
;

Action:
    Buy | Sell
;

Buy:
    "buy" quantity=REAL ticker=ID "at" "price" price=REAL
;

Sell:
    "sell" quantity=REAL ticker=ID "at" "price" price=REAL
;