grammar uk.ac.kcl.inf.trader.Trader with org.eclipse.xtext.common.Terminals

generate trader "http://www.ac.uk/kcl/inf/trader/Trader"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

TraderProgram:
    statements+=Statement*
;

Statement:
    ConnectStatement | TradingBot | ListBots | Execute | Stop | VariableDeclaration | LoopStatement
;

ConnectStatement:
    "connect" "to" "broker" brokerName = ID "with"
    "username:" username = StringPrimary ","
    "password:" password = StringPrimary ","
    "leverage:" leverage = Addition ","
    "money:" money = Addition ","
    "timeframe:" timeframe = StringPrimary
;

TradingBot:
    "create" "bot" "with" strategy = StrategyDef "strategy" "using" fund = Addition "funds"
;

enum StrategyDef:
    buyAndHold | meanReversion
;

ListBots:
	listCommand = "see" "registered" "bots"
;

Execute:
    executeCommand = "execute" "bots"
;

Stop:
	stopCommand = "stop" "bots"
;

VariableDeclaration:
    "var" name=ID "=" (value=StringValue | value=RealValue | value=IntValue)
;

StringValue:
    value=STRING
;

RealValue:
    value=REAL
;

IntValue:
    value=INT
;

LoopStatement:
	"loop" count = Addition "times" "do"
		statements += Statement+
	"end"		
;

REAL returns ecore::EFloat hidden():
	INT? "." INT
;

Addition returns Expression:
	Multiplication ({Addition.left = current} operator+=("+"|"-") right+=Multiplication)*
;

Multiplication returns Expression:
	Primary ({Multiplication.left = current} operator+=("*"|"/") right+=Primary)*
;

Primary returns Expression:
	IntValue |
	RealValue |
	NumVarExpression |
	"(" Addition ")"
;

NumVarExpression:
	var = [VariableDeclaration]
;


StringPrimary returns Expression:
	StringVarExpression |
	StringValue
;

StringVarExpression:
	var = [VariableDeclaration]
;

Action:
    Buy | Sell
;

Buy:
    "buy" quantity=Addition ticker=ID "at" "price" price=Addition
;

Sell:
    "sell" quantity=Addition ticker=ID "at" "price" price=Addition
;