grammar uk.ac.kcl.inf.trader.Trader with org.eclipse.xtext.common.Terminals

generate trader "http://www.ac.uk/kcl/inf/trader/Trader"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

TraderProgram:
    statements+=Statement*
;

Statement:
    ConnectStatement | CreateBotStatement | ListBotsStatement | ExecuteBotsStatement | VariableDeclaration | LoopStatement
;

ConnectStatement:
    "connect" "to" "trade" tickerName = StringPrimary "on"
    "server" brokerName = StringPrimary "with" 
    "login" username = StringPrimary ","
    "password" password = StringPrimary ","
    "timeframe" timeframe = TimeFrameDef
;

CreateBotStatement:
    "create" "bot" "with" "strategy" strategy = StrategyDef "using" "lot" "size" lotSize = Addition
;

enum StrategyDef:
    simpleStrategyA | machineLearningStrategyA
;

enum TimeFrameDef:
	M1 | M2 | M3 | M4 | M5 | M6 | M10 | M12 | M20 | M30 |
	H1 | H2 | H3 | H4 | H6 | H8 | H12 |  D1 |  W1 | MN1
;

ListBotsStatement:
	listCommand = "see" "registered" "bots"
;

ExecuteBotsStatement:
    "execute" "bots" "for" days = Addition "days" hours = Addition "hours" minutes = Addition "minutes" seconds = Addition "seconds"
;

VariableDeclaration:
    "var" name=ID "=" (value=StringValue | value=RealValue | value=IntValue)
;

StringValue:
    value=STRING
;

RealValue:
    value=REAL
;

IntValue:
    value=INT
;

LoopStatement:
	"loop" count = Addition "times" "do"
		statements += Statement+
	"end"		
;

Addition returns Expression:
	Multiplication ({Addition.left = current} operator+=("+"|"-") right+=Multiplication)*
;

Multiplication returns Expression:
	Primary ({Multiplication.left = current} operator+=("*"|"/") right+=Primary)*
;

Primary returns Expression:
	IntValue |
	RealValue |
	NumVarExpression |
	"(" Addition ")"
;

NumVarExpression:
	var = [VariableDeclaration]
;

REAL returns ecore::EFloat hidden():
	INT? "." INT
;

StringPrimary returns Expression:
	StringVarExpression |
	StringValue
;

StringVarExpression:
	var = [VariableDeclaration]
;