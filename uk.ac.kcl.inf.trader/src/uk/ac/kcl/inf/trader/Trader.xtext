grammar uk.ac.kcl.inf.trader.Trader with org.eclipse.xtext.common.Terminals

generate trader "http://www.ac.uk/kcl/inf/trader/Trader"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

TraderProgram:
    statements+=Statement*
;

Statement:
    Connect | TradingBot | ListBots | Execute | Stop | VariableDeclaration | LoopStatement
;

Connect:
    "connect" "to" "broker" brokerName = ID "with" ( parameters=ConnectParameters)?
; 

ConnectParameters:
    "username" username=STRING ","
    "password" password=STRING ","
    "leverage" leverage=REAL ","
    "money" money=REAL ","
    "timeframe" timeframe=STRING
;

TradingBot:
    "create" "bot" botName = ID "with" strategy = StrategyDef "strategy" "using" funds = REAL "from" "money"
;

enum StrategyDef:
    buyAndHold | meanReversion
;

ListBots:
	listCommand = "see" "registered" "bots"
;

Execute:
    executeCommand = "execute" "bots"
;

Stop:
	stopCommand = "stop" "bots"
;

VariableDeclaration:
    IntVariableDeclaration | StringVariableDeclaration | RealVariableDeclaration 
;

IntVariableDeclaration:
    "var" name=ID "=" "int" ":" value=INT
;

StringVariableDeclaration:
    "var" name=ID "=" "String" ":" value=STRING
;

RealVariableDeclaration:
    "var" name=ID "=" "Real" ":" value=REAL
;

LoopStatement:
	"loop" count = Addition "times" "do"
		statements += Statement+
	"end"		
;

REAL returns ecore::EFloat hidden():
	INT? "." INT
; 

Addition returns IntExpression:
	Multiplication ({Addition.left = current} operator+=("+"|"-") right+=Multiplication)*
;

Multiplication returns IntExpression:
	Primary ({Multiplication.left = current} operator+=("*"|"/") right+=Primary)*
;

Primary returns IntExpression:
	IntLiteral |
	IntVarExpression |
	"(" Addition ")"
;

IntLiteral:
	val = INT
;

IntVarExpression:
	var = [IntVariableDeclaration]
;

Action:
    Buy | Sell
;

Buy:
    "buy" quantity=REAL ticker=ID "at" "price" price=REAL
;

Sell:
    "sell" quantity=REAL ticker=ID "at" "price" price=REAL
;