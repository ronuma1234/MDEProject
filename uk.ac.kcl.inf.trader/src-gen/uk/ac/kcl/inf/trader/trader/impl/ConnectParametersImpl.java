/**
 * generated by Xtext 2.34.0
 */
package uk.ac.kcl.inf.trader.trader.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import uk.ac.kcl.inf.trader.trader.ConnectParameters;
import uk.ac.kcl.inf.trader.trader.TraderPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Connect Parameters</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link uk.ac.kcl.inf.trader.trader.impl.ConnectParametersImpl#getUsername <em>Username</em>}</li>
 *   <li>{@link uk.ac.kcl.inf.trader.trader.impl.ConnectParametersImpl#getPassword <em>Password</em>}</li>
 *   <li>{@link uk.ac.kcl.inf.trader.trader.impl.ConnectParametersImpl#getLeverage <em>Leverage</em>}</li>
 *   <li>{@link uk.ac.kcl.inf.trader.trader.impl.ConnectParametersImpl#getMoney <em>Money</em>}</li>
 *   <li>{@link uk.ac.kcl.inf.trader.trader.impl.ConnectParametersImpl#getTimeframe <em>Timeframe</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ConnectParametersImpl extends MinimalEObjectImpl.Container implements ConnectParameters
{
  /**
   * The default value of the '{@link #getUsername() <em>Username</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUsername()
   * @generated
   * @ordered
   */
  protected static final String USERNAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getUsername() <em>Username</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUsername()
   * @generated
   * @ordered
   */
  protected String username = USERNAME_EDEFAULT;

  /**
   * The default value of the '{@link #getPassword() <em>Password</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPassword()
   * @generated
   * @ordered
   */
  protected static final String PASSWORD_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPassword() <em>Password</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPassword()
   * @generated
   * @ordered
   */
  protected String password = PASSWORD_EDEFAULT;

  /**
   * The default value of the '{@link #getLeverage() <em>Leverage</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLeverage()
   * @generated
   * @ordered
   */
  protected static final float LEVERAGE_EDEFAULT = 0.0F;

  /**
   * The cached value of the '{@link #getLeverage() <em>Leverage</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLeverage()
   * @generated
   * @ordered
   */
  protected float leverage = LEVERAGE_EDEFAULT;

  /**
   * The default value of the '{@link #getMoney() <em>Money</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMoney()
   * @generated
   * @ordered
   */
  protected static final float MONEY_EDEFAULT = 0.0F;

  /**
   * The cached value of the '{@link #getMoney() <em>Money</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMoney()
   * @generated
   * @ordered
   */
  protected float money = MONEY_EDEFAULT;

  /**
   * The default value of the '{@link #getTimeframe() <em>Timeframe</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTimeframe()
   * @generated
   * @ordered
   */
  protected static final String TIMEFRAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTimeframe() <em>Timeframe</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTimeframe()
   * @generated
   * @ordered
   */
  protected String timeframe = TIMEFRAME_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ConnectParametersImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TraderPackage.Literals.CONNECT_PARAMETERS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getUsername()
  {
    return username;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUsername(String newUsername)
  {
    String oldUsername = username;
    username = newUsername;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TraderPackage.CONNECT_PARAMETERS__USERNAME, oldUsername, username));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getPassword()
  {
    return password;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPassword(String newPassword)
  {
    String oldPassword = password;
    password = newPassword;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TraderPackage.CONNECT_PARAMETERS__PASSWORD, oldPassword, password));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public float getLeverage()
  {
    return leverage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLeverage(float newLeverage)
  {
    float oldLeverage = leverage;
    leverage = newLeverage;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TraderPackage.CONNECT_PARAMETERS__LEVERAGE, oldLeverage, leverage));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public float getMoney()
  {
    return money;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMoney(float newMoney)
  {
    float oldMoney = money;
    money = newMoney;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TraderPackage.CONNECT_PARAMETERS__MONEY, oldMoney, money));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getTimeframe()
  {
    return timeframe;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTimeframe(String newTimeframe)
  {
    String oldTimeframe = timeframe;
    timeframe = newTimeframe;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TraderPackage.CONNECT_PARAMETERS__TIMEFRAME, oldTimeframe, timeframe));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TraderPackage.CONNECT_PARAMETERS__USERNAME:
        return getUsername();
      case TraderPackage.CONNECT_PARAMETERS__PASSWORD:
        return getPassword();
      case TraderPackage.CONNECT_PARAMETERS__LEVERAGE:
        return getLeverage();
      case TraderPackage.CONNECT_PARAMETERS__MONEY:
        return getMoney();
      case TraderPackage.CONNECT_PARAMETERS__TIMEFRAME:
        return getTimeframe();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TraderPackage.CONNECT_PARAMETERS__USERNAME:
        setUsername((String)newValue);
        return;
      case TraderPackage.CONNECT_PARAMETERS__PASSWORD:
        setPassword((String)newValue);
        return;
      case TraderPackage.CONNECT_PARAMETERS__LEVERAGE:
        setLeverage((Float)newValue);
        return;
      case TraderPackage.CONNECT_PARAMETERS__MONEY:
        setMoney((Float)newValue);
        return;
      case TraderPackage.CONNECT_PARAMETERS__TIMEFRAME:
        setTimeframe((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TraderPackage.CONNECT_PARAMETERS__USERNAME:
        setUsername(USERNAME_EDEFAULT);
        return;
      case TraderPackage.CONNECT_PARAMETERS__PASSWORD:
        setPassword(PASSWORD_EDEFAULT);
        return;
      case TraderPackage.CONNECT_PARAMETERS__LEVERAGE:
        setLeverage(LEVERAGE_EDEFAULT);
        return;
      case TraderPackage.CONNECT_PARAMETERS__MONEY:
        setMoney(MONEY_EDEFAULT);
        return;
      case TraderPackage.CONNECT_PARAMETERS__TIMEFRAME:
        setTimeframe(TIMEFRAME_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TraderPackage.CONNECT_PARAMETERS__USERNAME:
        return USERNAME_EDEFAULT == null ? username != null : !USERNAME_EDEFAULT.equals(username);
      case TraderPackage.CONNECT_PARAMETERS__PASSWORD:
        return PASSWORD_EDEFAULT == null ? password != null : !PASSWORD_EDEFAULT.equals(password);
      case TraderPackage.CONNECT_PARAMETERS__LEVERAGE:
        return leverage != LEVERAGE_EDEFAULT;
      case TraderPackage.CONNECT_PARAMETERS__MONEY:
        return money != MONEY_EDEFAULT;
      case TraderPackage.CONNECT_PARAMETERS__TIMEFRAME:
        return TIMEFRAME_EDEFAULT == null ? timeframe != null : !TIMEFRAME_EDEFAULT.equals(timeframe);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (username: ");
    result.append(username);
    result.append(", password: ");
    result.append(password);
    result.append(", leverage: ");
    result.append(leverage);
    result.append(", money: ");
    result.append(money);
    result.append(", timeframe: ");
    result.append(timeframe);
    result.append(')');
    return result.toString();
  }

} //ConnectParametersImpl
